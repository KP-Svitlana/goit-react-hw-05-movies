{"version":3,"file":"static/js/670.4ee168a3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","Pages/Movies.jsx","components/API/API.jsx","webpack://react-homework-template/./src/components/GalleryMovies/GalleryMovies.module.css?288e","components/GalleryMovies/GalleryMovies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__NsJpF\",\"searchForm__input\":\"SearchForm_searchForm__input__i6El6\",\"searchForm__btn\":\"SearchForm_searchForm__btn__BRG3D\"};","import css from './SearchForm.module.css';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onFormSabmit }) => {\n  const onSearchFormSubmit = event => {\n    event.preventDefault();\n    onFormSabmit(event.target.elements.input.value);\n    event.target.reset();\n  };\n\n  return (\n    <form className={css.searchForm} onSubmit={onSearchFormSubmit}>\n      <input\n        className={css.searchForm__input}\n        type=\"text\"\n        name=\"input\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n\n      <button type=\"submit\" className={css.searchForm__btn}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onFormSabmit: PropTypes.func.isRequired,\n};\n","import { getSerchByQuery } from 'components/API/API';\nimport GalleryMovies from 'components/GalleryMovies/GalleryMovies';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [moviesData, setMoviesData] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    async function serchByQuery() {\n      const response = await getSerchByQuery(query).then(result => result.data);\n      setMoviesData(response.results);\n    }\n    serchByQuery();\n  }, [query]);\n\n  function getSerchFilmsByQuery(query) {\n    setSearchParams(query !== '' ? { query: query } : {});\n  }\n\n  return (\n    <>\n      <SearchForm onFormSabmit={getSerchFilmsByQuery} />\n      {query && <GalleryMovies data={moviesData} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'f31e3eddb8b7eb3d84e2156a52b41937';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const trendingMovieToday = () => {\n  return axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const getSerchByQuery = query => {\n  return axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n};\n\nexport const getSerchById = id => {\n  return axios.get(`movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const getSerchByCredits = id => {\n  return axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const getSerchByReviews = id => {\n  return axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"gallery__list\":\"GalleryMovies_gallery__list__5O-ZZ\",\"gallery__title\":\"GalleryMovies_gallery__title__cnfKn\",\"gallery__item\":\"GalleryMovies_gallery__item__-ho2f\",\"gallery__link\":\"GalleryMovies_gallery__link__bt2Pj\",\"gallery__img\":\"GalleryMovies_gallery__img__4teL5\",\"gallery__name\":\"GalleryMovies_gallery__name__xfsy4\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './GalleryMovies.module.css';\nimport PropTypes from 'prop-types';\n\nconst IMB_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst GalleryMovies = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className={css.gallery__list}>\n        {data.map(({ poster_path, id, original_title, title }) => {\n          return (\n            <li key={id} className={css.gallery__item}>\n              <Link\n                to={`/movies/${id}`}\n                className={css.gallery__link}\n                state={{ from: location }}\n              >\n                <img\n                  src={\n                    poster_path !== null\n                      ? IMB_BASE_URL + poster_path\n                      : 'https://ih1.redbubble.net/image.512138487.5983/fposter,small,wall_texture,product,750x1000.u3.jpg'\n                  }\n                  alt={original_title}\n                  className={css.gallery__img}\n                />\n                <p className={css.gallery__name}>{title}</p>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default GalleryMovies;\n\nGalleryMovies.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["onFormSabmit","className","css","onSubmit","event","preventDefault","target","elements","input","value","reset","type","name","autoComplete","autoFocus","placeholder","useState","moviesData","setMoviesData","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getSerchByQuery","then","result","data","response","results","serchByQuery","GalleryMovies","API_KEY","axios","trendingMovieToday","getSerchById","id","getSerchByCredits","getSerchByReviews","location","useLocation","map","poster_path","original_title","title","to","state","from","src","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}